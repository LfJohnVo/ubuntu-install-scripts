#!/bin/bash

set -e

dpkg -l aptitude 2>&1 | grep ^ii >/dev/null || sudo apt-get install -y aptitude
dpkg -l docker-engine 2>&1 | grep ^ii >/dev/null || ./install-docker

PROXY=${PROXY:-localhost:3128}
PROXY_HOST=${PROXY_HOST:-${PROXY%%:*}}
PROXY_PORT=${PROXY_PORT:-${PROXY#*:}}
PROXY=$PROXY_HOST:$PROXY_PORT

DNS=${DNS:-$(nmcli device show | awk -F ' ' '/^IP4.DNS/{print $2}'| xargs echo | sed -r 's/(^| )/ --dns=/g')}
EXEC_START=${EXEC_START:-$(cat /lib/systemd/system/docker.service | grep ExecStart)$DNS}

sudo mkdir -p /etc/systemd/system/docker.service.d
sudo tee /etc/systemd/system/docker.service.d/http-proxy.conf >/dev/null <<EOF
[Service]
Environment="HTTP_PROXY=http://$PROXY/" "HTTPS_PROXY=http://$PROXY/" "http_proxy=http://$PROXY/" "https_proxy=http://$PROXY/"
ExecStart=
$EXEC_START
EOF

EXISTING_REDSOCKS=$(sudo su - $USER -c "docker ps" | grep ncarlier/redsocks | awk '{print $1}')
if [[ -n "$EXISTING_REDSOCKS" ]]; then
    for i in $EXISTING_REDSOCKS; do
        sudo su - $USER -c "docker stop $i > /dev/null"
        sudo su - $USER -c "docker rm -f $i > /dev/null"
    done
fi
sudo su - $USER -c "docker run --restart=always --privileged=true --net=host -d ncarlier/redsocks $PROXY_HOST $PROXY_PORT > /dev/null"

sudo systemctl daemon-reload
sudo systemctl stop docker
sudo systemctl start docker

echo "Configured docker to go through the proxy $PROXY."
echo "    /etc/systemd/system/docker.service.d/http-proxy.conf"
echo "    $(sudo su - $USER -c "docker ps" | grep ncarlier/redsocks)"
